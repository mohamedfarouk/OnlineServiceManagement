//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineServiceManagement.WinServiceManger {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceControllerStatus", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceProcess")]
    public enum ServiceControllerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContinuePending = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PausePending = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartPending = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopped = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StopPending = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WinServiceManger.WinServiceProviderService", CallbackContract=typeof(OnlineServiceManagement.WinServiceManger.WinServiceProviderServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface WinServiceProviderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WinServiceProviderService/Ping", ReplyAction="http://tempuri.org/WinServiceProviderService/PingResponse")]
        string Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WinServiceProviderService/GetServiceStatus", ReplyAction="http://tempuri.org/WinServiceProviderService/GetServiceStatusResponse")]
        OnlineServiceManagement.WinServiceManger.ServiceControllerStatus GetServiceStatus(string Identification, string ServiceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WinServiceProviderService/StartService", ReplyAction="http://tempuri.org/WinServiceProviderService/StartServiceResponse")]
        OnlineServiceManagement.WinServiceManger.ServiceControllerStatus StartService(string Identification, string ServiceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WinServiceProviderService/StopService", ReplyAction="http://tempuri.org/WinServiceProviderService/StopServiceResponse")]
        OnlineServiceManagement.WinServiceManger.ServiceControllerStatus StopService(string Identification, string ServiceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WinServiceProviderService/RestartService", ReplyAction="http://tempuri.org/WinServiceProviderService/RestartServiceResponse")]
        OnlineServiceManagement.WinServiceManger.ServiceControllerStatus RestartService(string Identification, string ServiceName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WinServiceProviderServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/WinServiceProviderService/ServiceStatusChanged")]
        void ServiceStatusChanged(string ServiceName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WinServiceProviderServiceChannel : OnlineServiceManagement.WinServiceManger.WinServiceProviderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WinServiceProviderServiceClient : System.ServiceModel.DuplexClientBase<OnlineServiceManagement.WinServiceManger.WinServiceProviderService>, OnlineServiceManagement.WinServiceManger.WinServiceProviderService {
        
        public WinServiceProviderServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WinServiceProviderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WinServiceProviderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WinServiceProviderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WinServiceProviderServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        public OnlineServiceManagement.WinServiceManger.ServiceControllerStatus GetServiceStatus(string Identification, string ServiceName) {
            return base.Channel.GetServiceStatus(Identification, ServiceName);
        }
        
        public OnlineServiceManagement.WinServiceManger.ServiceControllerStatus StartService(string Identification, string ServiceName) {
            return base.Channel.StartService(Identification, ServiceName);
        }
        
        public OnlineServiceManagement.WinServiceManger.ServiceControllerStatus StopService(string Identification, string ServiceName) {
            return base.Channel.StopService(Identification, ServiceName);
        }
        
        public OnlineServiceManagement.WinServiceManger.ServiceControllerStatus RestartService(string Identification, string ServiceName) {
            return base.Channel.RestartService(Identification, ServiceName);
        }
    }
}
